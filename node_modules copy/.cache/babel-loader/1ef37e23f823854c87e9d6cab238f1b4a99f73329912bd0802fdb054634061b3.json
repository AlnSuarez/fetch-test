{"ast":null,"code":"\"use client\";\n\n// src/use-card.ts\nimport { card } from \"@nextui-org/theme\";\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useRipple } from \"@nextui-org/ripple\";\nfunction useCard(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, card.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    disableRipple = false,\n    onClick,\n    onPress,\n    autoFocus,\n    className,\n    classNames,\n    allowTextSelectionOnPress = true,\n    ...otherProps\n  } = props;\n  const domRef = useDOMRef(ref);\n  const Component = as || (originalProps.isPressable ? \"button\" : \"div\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const {\n    onClick: onRippleClickHandler,\n    ripples\n  } = useRipple();\n  const handleClick = e => {\n    if (!originalProps.disableAnimation && !disableRipple && domRef.current) {\n      onRippleClickHandler(e);\n    }\n  };\n  const {\n    buttonProps,\n    isPressed\n  } = useAriaButton({\n    onPress,\n    elementType: as,\n    isDisabled: !originalProps.isPressable,\n    onClick: chain(onClick, handleClick),\n    allowTextSelectionOnPress,\n    ...otherProps\n  }, domRef);\n  const {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled: !originalProps.isHoverable,\n    ...otherProps\n  });\n  const {\n    isFocusVisible,\n    isFocused,\n    focusProps\n  } = useFocusRing({\n    autoFocus\n  });\n  const slots = useMemo(() => card({\n    ...variantProps\n  }), [...Object.values(variantProps)]);\n  const context = useMemo(() => ({\n    isDisabled: originalProps.isDisabled,\n    isFooterBlurred: originalProps.isFooterBlurred,\n    disableAnimation: originalProps.disableAnimation,\n    fullWidth: originalProps.fullWidth,\n    slots,\n    classNames\n  }), [slots, classNames, originalProps.isDisabled, originalProps.isFooterBlurred, originalProps.disableAnimation, originalProps.fullWidth]);\n  const getCardProps = useCallback((props2 = {}) => {\n    return {\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      }),\n      tabIndex: originalProps.isPressable ? 0 : -1,\n      \"data-hover\": dataAttr(isHovered),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-disabled\": dataAttr(originalProps.isDisabled),\n      ...mergeProps(originalProps.isPressable ? {\n        ...buttonProps,\n        ...focusProps,\n        role: \"button\"\n      } : {}, originalProps.isHoverable ? hoverProps : {}, filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }), filterDOMProps(props2))\n    };\n  }, [domRef, slots, baseStyles, shouldFilterDOMProps, originalProps.isPressable, originalProps.isHoverable, originalProps.isDisabled, isHovered, isPressed, isFocusVisible, buttonProps, focusProps, hoverProps, otherProps]);\n  return {\n    context,\n    domRef,\n    Component,\n    classNames,\n    children,\n    ripples,\n    isHovered,\n    isPressed,\n    isPressable: originalProps.isPressable,\n    isHoverable: originalProps.isHoverable,\n    disableAnimation: originalProps.disableAnimation,\n    disableRipple,\n    handleClick,\n    isFocusVisible,\n    getCardProps\n  };\n}\nexport { useCard };","map":{"version":3,"names":["card","useCallback","useMemo","chain","mergeProps","useFocusRing","useHover","useAriaButton","mapPropsVariants","clsx","dataAttr","filterDOMProps","useDOMRef","useRipple","useCard","originalProps","props","variantProps","variantKeys","ref","as","children","disableRipple","onClick","onPress","autoFocus","className","classNames","allowTextSelectionOnPress","otherProps","domRef","Component","isPressable","shouldFilterDOMProps","baseStyles","base","onRippleClickHandler","ripples","handleClick","e","disableAnimation","current","buttonProps","isPressed","elementType","isDisabled","hoverProps","isHovered","isHoverable","isFocusVisible","isFocused","focusProps","slots","Object","values","context","isFooterBlurred","fullWidth","getCardProps","props2","class","tabIndex","role","enabled"],"sources":["C:/Users/alans/OneDrive/Documents/Typescript/fetch-test/node_modules/@nextui-org/card/dist/chunk-VLCEO3FB.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-card.ts\nimport { card } from \"@nextui-org/theme\";\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useRipple } from \"@nextui-org/ripple\";\nfunction useCard(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, card.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    disableRipple = false,\n    onClick,\n    onPress,\n    autoFocus,\n    className,\n    classNames,\n    allowTextSelectionOnPress = true,\n    ...otherProps\n  } = props;\n  const domRef = useDOMRef(ref);\n  const Component = as || (originalProps.isPressable ? \"button\" : \"div\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const { onClick: onRippleClickHandler, ripples } = useRipple();\n  const handleClick = (e) => {\n    if (!originalProps.disableAnimation && !disableRipple && domRef.current) {\n      onRippleClickHandler(e);\n    }\n  };\n  const { buttonProps, isPressed } = useAriaButton(\n    {\n      onPress,\n      elementType: as,\n      isDisabled: !originalProps.isPressable,\n      onClick: chain(onClick, handleClick),\n      allowTextSelectionOnPress,\n      ...otherProps\n    },\n    domRef\n  );\n  const { hoverProps, isHovered } = useHover({\n    isDisabled: !originalProps.isHoverable,\n    ...otherProps\n  });\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const slots = useMemo(\n    () => card({\n      ...variantProps\n    }),\n    [...Object.values(variantProps)]\n  );\n  const context = useMemo(\n    () => ({\n      isDisabled: originalProps.isDisabled,\n      isFooterBlurred: originalProps.isFooterBlurred,\n      disableAnimation: originalProps.disableAnimation,\n      fullWidth: originalProps.fullWidth,\n      slots,\n      classNames\n    }),\n    [\n      slots,\n      classNames,\n      originalProps.isDisabled,\n      originalProps.isFooterBlurred,\n      originalProps.disableAnimation,\n      originalProps.fullWidth\n    ]\n  );\n  const getCardProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ref: domRef,\n        className: slots.base({ class: baseStyles }),\n        tabIndex: originalProps.isPressable ? 0 : -1,\n        \"data-hover\": dataAttr(isHovered),\n        \"data-pressed\": dataAttr(isPressed),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocusVisible),\n        \"data-disabled\": dataAttr(originalProps.isDisabled),\n        ...mergeProps(\n          originalProps.isPressable ? { ...buttonProps, ...focusProps, role: \"button\" } : {},\n          originalProps.isHoverable ? hoverProps : {},\n          filterDOMProps(otherProps, {\n            enabled: shouldFilterDOMProps\n          }),\n          filterDOMProps(props2)\n        )\n      };\n    },\n    [\n      domRef,\n      slots,\n      baseStyles,\n      shouldFilterDOMProps,\n      originalProps.isPressable,\n      originalProps.isHoverable,\n      originalProps.isDisabled,\n      isHovered,\n      isPressed,\n      isFocusVisible,\n      buttonProps,\n      focusProps,\n      hoverProps,\n      otherProps\n    ]\n  );\n  return {\n    context,\n    domRef,\n    Component,\n    classNames,\n    children,\n    ripples,\n    isHovered,\n    isPressed,\n    isPressable: originalProps.isPressable,\n    isHoverable: originalProps.isHoverable,\n    disableAnimation: originalProps.disableAnimation,\n    disableRipple,\n    handleClick,\n    isFocusVisible,\n    getCardProps\n  };\n}\n\nexport {\n  useCard\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}