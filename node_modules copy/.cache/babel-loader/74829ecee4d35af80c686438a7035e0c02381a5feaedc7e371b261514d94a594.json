{"ast":null,"code":"import { useId as $1u3Uc$useId, mergeProps as $1u3Uc$mergeProps } from \"@react-aria/utils\";\nimport { useButton as $1u3Uc$useButton } from \"@react-aria/button\";\nimport { useSelectableItem as $1u3Uc$useSelectableItem, useSelectableList as $1u3Uc$useSelectableList } from \"@react-aria/selection\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $fdb8889d8fd9a904$export$dfe72e7a237bd184(props, state, ref) {\n  let {\n    item: item\n  } = props;\n  let buttonId = (0, $1u3Uc$useId)();\n  let regionId = (0, $1u3Uc$useId)();\n  let isDisabled = state.disabledKeys.has(item.key);\n  let {\n    itemProps: itemProps\n  } = (0, $1u3Uc$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: item.key,\n    ref: ref\n  });\n  let {\n    buttonProps: buttonProps\n  } = (0, $1u3Uc$useButton)((0, $1u3Uc$mergeProps)(itemProps, {\n    id: buttonId,\n    elementType: \"button\",\n    isDisabled: isDisabled,\n    onPress: () => state.toggleKey(item.key)\n  }), ref);\n  let isExpanded = state.expandedKeys.has(item.key);\n  return {\n    buttonProps: {\n      ...buttonProps,\n      \"aria-expanded\": isExpanded,\n      \"aria-controls\": isExpanded ? regionId : undefined\n    },\n    regionProps: {\n      id: regionId,\n      role: \"region\",\n      \"aria-labelledby\": buttonId\n    }\n  };\n}\nfunction $fdb8889d8fd9a904$export$35e88b08325f7140(props, state, ref) {\n  let {\n    listProps: listProps\n  } = (0, $1u3Uc$useSelectableList)({\n    ...props,\n    ...state,\n    allowsTabNavigation: true,\n    ref: ref\n  });\n  return {\n    accordionProps: {\n      ...listProps,\n      tabIndex: undefined\n    }\n  };\n}\nexport { $fdb8889d8fd9a904$export$dfe72e7a237bd184 as useAccordionItem, $fdb8889d8fd9a904$export$35e88b08325f7140 as useAccordion };","map":{"version":3,"names":["$fdb8889d8fd9a904$export$dfe72e7a237bd184","props","state","ref","item","buttonId","$1u3Uc$useId","regionId","isDisabled","disabledKeys","has","key","itemProps","$1u3Uc$useSelectableItem","selectionManager","buttonProps","$1u3Uc$useButton","$1u3Uc$mergeProps","id","elementType","onPress","toggleKey","isExpanded","expandedKeys","undefined","regionProps","role","$fdb8889d8fd9a904$export$35e88b08325f7140","listProps","$1u3Uc$useSelectableList","allowsTabNavigation","accordionProps","tabIndex"],"sources":["C:\\Users\\alans\\OneDrive\\Documents\\Typescript\\fetch-test\\node_modules\\@react-aria\\accordion\\dist\\packages\\@react-aria\\accordion\\src\\index.ts","C:\\Users\\alans\\OneDrive\\Documents\\Typescript\\fetch-test\\node_modules\\@react-aria\\accordion\\dist\\packages\\@react-aria\\accordion\\src\\useAccordion.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useAccordionItem, useAccordion} from './useAccordion';\nexport type {AccordionAria, AccordionItemAria, AccordionItemAriaProps} from './useAccordion';\nexport type {AriaAccordionProps} from '@react-types/accordion';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaAccordionProps} from '@react-types/accordion';\nimport {ButtonHTMLAttributes, RefObject} from 'react';\nimport {DOMAttributes, Node} from '@react-types/shared';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {TreeState} from '@react-stately/tree';\nimport {useButton} from '@react-aria/button';\nimport {useSelectableItem, useSelectableList} from '@react-aria/selection';\n\nexport interface AccordionAria {\n  /** Props for the accordion container element. */\n  accordionProps: DOMAttributes\n}\n\nexport interface AccordionItemAriaProps<T> {\n  item: Node<T>\n}\n\nexport interface AccordionItemAria {\n  /** Props for the accordion item button. */\n  buttonProps: ButtonHTMLAttributes<HTMLElement>,\n  /** Props for the accordion item content element. */\n  regionProps: DOMAttributes\n}\n\nexport function useAccordionItem<T>(props: AccordionItemAriaProps<T>, state: TreeState<T>, ref: RefObject<HTMLButtonElement>): AccordionItemAria {\n  let {item} = props;\n  let buttonId = useId();\n  let regionId = useId();\n  let isDisabled = state.disabledKeys.has(item.key);\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: item.key,\n    ref\n  });\n  let {buttonProps} = useButton(mergeProps(itemProps as any, {\n    id: buttonId,\n    elementType: 'button',\n    isDisabled,\n    onPress: () => state.toggleKey(item.key)\n  }), ref);\n  let isExpanded = state.expandedKeys.has(item.key);\n  return {\n    buttonProps: {\n      ...buttonProps,\n      'aria-expanded': isExpanded,\n      'aria-controls': isExpanded ? regionId : undefined\n    },\n    regionProps: {\n      id: regionId,\n      role: 'region',\n      'aria-labelledby': buttonId\n    }\n  };\n}\n\nexport function useAccordion<T>(props: AriaAccordionProps<T>, state: TreeState<T>, ref: RefObject<HTMLDivElement>): AccordionAria {\n  let {listProps} = useSelectableList({\n    ...props,\n    ...state,\n    allowsTabNavigation: true,\n    ref\n  });\n  return {\n    accordionProps: {\n      ...listProps,\n      tabIndex: undefined\n    }\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;;AAoCO,SAASA,0CAAoBC,KAAgC,EAAEC,KAAmB,EAAEC,GAAiC;EAC1H,IAAI;IAAAC,IAAA,EAACA;EAAI,CAAC,GAAGH,KAAA;EACb,IAAII,QAAA,GAAW,IAAAC,YAAI;EACnB,IAAIC,QAAA,GAAW,IAAAD,YAAI;EACnB,IAAIE,UAAA,GAAaN,KAAA,CAAMO,YAAA,CAAaC,GAAA,CAAIN,IAAA,CAAKO,GAAA;EAC7C,IAAI;IAAAC,SAAA,EAACA;EAAS,CAAC,GAAG,IAAAC,wBAAgB,EAAE;IAClCC,gBAAA,EAAkBZ,KAAA,CAAMY,gBAAA;IACxBH,GAAA,EAAKP,IAAA,CAAKO,GAAA;SACVR;EACF;EACA,IAAI;IAAAY,WAAA,EAACA;EAAW,CAAC,GAAG,IAAAC,gBAAQ,EAAE,IAAAC,iBAAS,EAAEL,SAAA,EAAkB;IACzDM,EAAA,EAAIb,QAAA;IACJc,WAAA,EAAa;gBACbX,UAAA;IACAY,OAAA,EAASA,CAAA,KAAMlB,KAAA,CAAMmB,SAAA,CAAUjB,IAAA,CAAKO,GAAA;EACtC,IAAIR,GAAA;EACJ,IAAImB,UAAA,GAAapB,KAAA,CAAMqB,YAAA,CAAab,GAAA,CAAIN,IAAA,CAAKO,GAAA;EAC7C,OAAO;IACLI,WAAA,EAAa;MACX,GAAGA,WAAW;MACd,iBAAiBO,UAAA;MACjB,iBAAiBA,UAAA,GAAaf,QAAA,GAAWiB;IAC3C;IACAC,WAAA,EAAa;MACXP,EAAA,EAAIX,QAAA;MACJmB,IAAA,EAAM;MACN,mBAAmBrB;IACrB;EACF;AACF;AAEO,SAASsB,0CAAgB1B,KAA4B,EAAEC,KAAmB,EAAEC,GAA8B;EAC/G,IAAI;IAAAyB,SAAA,EAACA;EAAS,CAAC,GAAG,IAAAC,wBAAgB,EAAE;IAClC,GAAG5B,KAAK;IACR,GAAGC,KAAK;IACR4B,mBAAA,EAAqB;SACrB3B;EACF;EACA,OAAO;IACL4B,cAAA,EAAgB;MACd,GAAGH,SAAS;MACZI,QAAA,EAAUR;IACZ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}